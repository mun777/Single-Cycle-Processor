$date
	Tue Aug  2 14:14:13 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module SignExtenderTest_v $end
$var wire 64 ! BusImm [63:0] $end
$var reg 3 " Ctrl [2:0] $end
$var reg 26 # Imm26 [25:0] $end
$var reg 8 $ passed [7:0] $end
$scope module dut $end
$var wire 3 % Ctrl [2:0] $end
$var wire 26 & Imm26 [25:0] $end
$var reg 64 ' BusImm [63:0] $end
$var reg 2 ( MOVCTRL [1:0] $end
$var reg 1 ) extBit $end
$upscope $end
$scope task allPassed $end
$var reg 8 * numTests [7:0] $end
$var reg 8 + passed [7:0] $end
$upscope $end
$scope task passTest $end
$var reg 64 , actualOut [63:0] $end
$var reg 64 - expectedOut [63:0] $end
$var reg 8 . passed [7:0] $end
$var reg 121 / testType [120:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx /
bx .
bx -
bx ,
bx +
bx *
0)
bx (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#90000
b100010011 !
b100010011 '
b1110001000100111010001101 #
b1110001000100111010001101 &
#100000
b1 $
b1 .
b100100100101101011101000111100101110000011001010010000000110001 /
b100010011 -
b100010011 ,
#190000
b100100010011 !
b100100010011 '
b1111001000100111010001101 #
b1111001000100111010001101 &
#200000
b10 $
b10 .
b100100100101101011101000111100101110000011001010010000000110010 /
b100100010011 -
b100100010011 ,
#290000
b1111111111111111111111111111111111111111111111111111111111010001 !
b1111111111111111111111111111111111111111111111111111111111010001 '
1)
b1 "
b1 %
b11000111010001011100100011 #
b11000111010001011100100011 &
#300000
b11 $
b11 .
b1000100001011010111010001111001011100000110010100100000011011100110010101100111 /
b1111111111111111111111111111111111111111111111111111111111010001 -
b1111111111111111111111111111111111111111111111111111111111010001 ,
#390000
b11010001 !
b11010001 '
0)
b11000011010001011100100011 #
b11000011010001011100100011 &
#400000
b100 $
b100 .
b1000100001011010111010001111001011100000110010100100000011100000110111101110011 /
b11010001 -
b11010001 ,
#490000
b1110001001110101000100 !
b1110001001110101000100 '
b10 "
b10 %
b1110001001110101000100 #
b1110001001110101000100 &
#500000
b101 $
b101 .
b1000010001011010111010001111001011100000110010100100000011100000110111101110011 /
b1110001001110101000100 -
b1110001001110101000100 ,
#590000
b1111111111111111111111111111111111111110001110001001110101000100 !
b1111111111111111111111111111111111111110001110001001110101000100 '
1)
b10001110001001110101000100 #
b10001110001001110101000100 &
#600000
b110 $
b110 .
b1000010001011010111010001111001011100000110010100100000011011100110010101100111 /
b1111111111111111111111111111111111111110001110001001110101000100 -
b1111111111111111111111111111111111111110001110001001110101000100 ,
#690000
b100101010001000 !
b100101010001000 '
0)
b11 "
b11 %
b10000010010101000100010110 #
b10000010010101000100010110 &
#700000
b111 $
b111 .
b10000110100001001011010001011010111010001111001011100000110010100100000011100000110111101110011 /
b100101010001000 -
b100101010001000 ,
#790000
b1111111111111111111111111111111111111111111111000100101010001000 !
b1111111111111111111111111111111111111111111111000100101010001000 '
1)
b10100010010101000100010110 #
b10100010010101000100010110 &
#800000
b1000 $
b1000 .
b10000110100001001011010001011010111010001111001011100000110010100100000011011100110010101100111 /
b1111111111111111111111111111111111111111111111000100101010001000 -
b1111111111111111111111111111111111111111111111000100101010001000 ,
#890000
b10010101010101010000000000000000 !
b10010101010101010000000000000000 '
b1 (
b100 "
b100 %
b1001100101010101010101010 #
b1001100101010101010101010 &
#900000
b1001 $
b1001 .
b101011101000101010010010101001001000100001000000100000101010011010100110010000001010100010001010101001101010100 /
b10010101010101010000000000000000 -
b10010101010101010000000000000000 ,
#990000
b1000 *
b1001 +
